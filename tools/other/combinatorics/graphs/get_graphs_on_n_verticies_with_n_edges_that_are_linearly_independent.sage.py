# This file was *autogenerated* from the file get_graphs_on_n_verticies_with_n_edges_that_are_linearly_independent.sage
from sage.all_cmdline import *  # import sage library

_sage_const_0 = Integer(0)
_sage_const_2 = Integer(2)
_sage_const_1 = Integer(1)
_sage_const_7 = Integer(7)
from itertools import combinations


def number_of_graphs(n):
    s = []
    for _ in combinations(list(range(_sage_const_0, n)), _sage_const_2):
        x = [_sage_const_0] * n
        x[_[_sage_const_0]] = _sage_const_1
        x[_[_sage_const_1]] = _sage_const_1
        s.append(x)
    ans = _sage_const_0

    for m in combinations(s, n - _sage_const_1):
        v = Matrix(m).T
        if v.rank() == v.dimensions()[_sage_const_1]:
            ans += _sage_const_1
    return ans


for i in range(_sage_const_1, _sage_const_7):
    print(number_of_graphs(i), end=", ")
