p = 2339851204004724957721010342753235519316651983727242447743865503880621265098264682174794504633835422235963596697861555570883016198479716965025575012268625765774904125254192193920650657137766983590698542150723961637000377197060526370515265875003211205883116008179482696593870830271642164940534609777383940562363658297371450847879631406566725045545465896497710754121476106821100518485197164188399982110643537512849084168481217530217980744655509612166785984815024663
q = 2319942305200638484754964498132559104584035374455401509476039591572328845121381341308634837807075433078553741440655250638333928835707964792031040688549660336913500563469360548002184071025830036837556460455579041269421559988934672507888489492453706321216718543572733541535387264738231505638148603455702876081362616785605801797560140876175211917602361129936602218998541557731231090539128494497263522768678522935128241342066143362983666416447964092623860907101225947
e = 0x1001

d = pow(e, -1, (p - 1) * (q - 1))
n = p * q

from Crypto.PublicKey import RSA
key = RSA.construct((n, e, d, p, q))

with open("id_rsa.pem", "w") as prv_file:
    prv_file.write(key.exportKey().decode())

with open("id_rsa.pub", "w") as pub_file:
    pub_file.write(key.publickey().exportKey().decode())
